{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","state","completed","completeTask","bind","event","console","log","self","preventDefault","data","id","target","getAttribute","xhttp","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onreadystatechange","readyState","status","setState","className","react_default","a","createElement","text","onClick","deleteTask","Component","NewTodo","sortTodo","addTodoTask","value","input","onChange","type","apikey","App","todos","keyCode","toConsumableArray","concat","parse","responseText","todolist","sort","b","localeCompare","remainingTodos","filter","todo","ToDosArray","document","addEventListener","_this2","src_NewTodo_0","map","src_Todo_0","key","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.462f8aed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\nvar apikey = \"568839-c48ca3-37fc80-e05415-8b5254\";\nclass Todo extends Component {\n  constructor(props)\n  {\n      super(props);\n      var self = this;\n      self.state = {\n        completed: this.props.completed\n\n      };\n      this.completeTask = this.completeTask.bind(this);\n  }\n  completeTask(event){\n    console.log(\"inside completeTask method\");\n    var self = this;\n    event.preventDefault();\n    var data = {\n      completed: !(self.state.completed)\n    };\n    var id = event.target.getAttribute(\"id\");\n    console.log(id);\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n    xhttp.setRequestHeader(\"Content-Type\",\"application/json\");\n    xhttp.setRequestHeader(\"x-api-key\", apikey);\n    xhttp.send(JSON.stringify(data));\n    xhttp.onreadystatechange = function()\n    {\n      if((this.readyState === 4 && this.status === 200))\n      {\n        self.setState({\n          completed: !(self.state.completed)\n        });\n      }\n    }\n  }\n  render() {\n    var self = this;\n    var className = \"abc\";\n    if(self.state.completed)\n    {\n      className = \"completed\"\n    }\n    return (\n      <div className={className}>\n      <p>{this.props.text}</p>\n        <button onClick = {this.props.deleteTask} className=\"delbutton\" id = {this.props.id}>Remove</button>\n        <button onClick = {this.completeTask} className=\"checkbox1\" id = {this.props.id}>Complete</button>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  render() {\n    return (\n          <div className=\"doubleinput\"> To Do List <div/>\n            <p>\n              <button onClick = {this.props.sortTodo} id=\"sortButton\"> Sort </button>\n              <button onClick = {this.props.addTodoTask} id=\"addtask\"> Add task </button> <br />\n              <input value = {this.props.input} onChange = {this.props.onChange} type = \"text\" id=\"todotask\"></input>\n            </p>\n          </div>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\nvar apikey = \"568839-c48ca3-37fc80-e05415-8b5254\";\nclass App extends Component {\n  constructor()\n  {\n    super()\n    var self = this;\n    self.state = {\n      todos: [],\n      input: ''\n    }\n    this.addTodoTask = this.addTodoTask.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.sortTodo = this.sortTodo.bind(this);\n  }\n  addTodoTask(event)\n  {\n    if(event.target.id == \"addtask\" || event.keyCode == 13)\n    {\n      console.log(\"insideaddtodotask\");\n      var self = this;\n      event.preventDefault();\n      var data = {\n        text: self.state.input\n      };\n      var xhttp = new XMLHttpRequest();\n      xhttp.open(\"POST\", \"https://cse204.work/todos\", true);\n      xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp.setRequestHeader(\"x-api-key\", apikey);\n      xhttp.send(JSON.stringify(data));\n      xhttp.onreadystatechange = function()\n      {\n        if(this.readyState == 4 && this.status == 200)\n        {\n          console.log(\"readyState and status all good\");\n          self.setState({\n            todos: [...self.state.todos, JSON.parse(this.responseText)]\n          })\n        }\n        else {\n          console.log(self.readyState);\n          console.log(self.status);\n          console.log(this.responseText);\n        }\n      };\n      self.setState({\n        input: ''\n      });\n    }\n  }\n  sortTodo(event)\n  {\n    event.preventDefault();\n    var self = this;\n    console.log(\"insidesortmethod\");\n    var todolist = self.state.todos;\n    /**\n    todolist.sort(function (a, b) {\n      return parseFloat(a.created) - parseFloat(b.created);\n    });\n    */\n    todolist.sort(function (a, b) {\n      return a.text.localeCompare(b.text);\n      })\n    self.setState({\n      todos:todolist\n    });\n  }\n  onChange(event)\n  {\n    var self = this;\n    self.setState({\n      input: event.target.value\n    });\n  }\n  /*\n  completeTask(event)\n  {\n    var self = this;\n    var id = event.target.getAttribute(\"id\");\n    self.setState({\n      todos: self.state.todos.map((todo) =>\n      {\n        if(id === todo.id)\n        {\n          todo.completed = !todo.completed;\n          var data = {\n            completed: todo.completed;\n          }\n          var xhttp = new XMLHttpRequest();\n          xhttp.open(\"PUT\", \"https://cse204.work/todos/\" + id, true);\n          xhttp.setRequestHeader(\"Content-Type\",\"application/json\");\n          xhttp.setRequestHeader(\"x-api-key\", apikey);\n          xhttp.send(JSON.stringify(data));\n          xhttp.onreadystatechange = function()\n          {\n            if((this.readyState == 4 && this.status == 200))\n            {\n              if(self.complete === 'complete')\n              {\n                self.setState({\n                  complete: 'not complete'\n                });\n              }\n              else\n              {\n                self.setState({\n                  complete: 'complete'\n                });\n              }\n            }\n            else if(this.readyState == 4)\n            {\n              console.log(this.responseText);\n            }\n          }\n        }\n      })\n    });\n  }\n  */\n  deleteTask(event)\n  {\n    console.log(\"inside deletetask method\");\n    var id = event.target.getAttribute(\"id\");\n    var self = this;\n    event.preventDefault();\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"DELETE\", \"https://cse204.work/todos/\" + id, true);\n    xhttp.setRequestHeader(\"x-api-key\", apikey);\n    xhttp.send();\n    xhttp.onreadystatechange = function()\n    {\n        if(this.readyState == 4 && this.status == 200)\n        {\n              const remainingTodos = self.state.todos.filter((todo) => {\n              if(todo.id !== id)\n              {\n                return todo;\n              }\n            });\n            self.setState({\n              todos: remainingTodos\n            });\n        }\n        else if (this.readyState === 4)\n        {\n          console.log(this.responseText);\n        }\n    };\n  }\n  componentDidMount()\n  {\n    const self = this;\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n    xhttp.setRequestHeader(\"x-api-key\", apikey);\n    xhttp.send();\n    xhttp.onreadystatechange = function(){\n      if(this.readyState == 4 && this.status == 200)\n      {\n        var ToDosArray = JSON.parse(this.responseText);\n        self.setState({todos: ToDosArray});\n      }\n      else {\n        console.log(this.responseText);\n      }\n    }\n    document.addEventListener(\"keydown\", this.addTodoTask);\n  }\n\n  render() {\n    return (\n      <section className = \"main\">\n        <div id =\"todolist\">\n        <NewTodo addTodoTask = {this.addTodoTask} onChange = {this.onChange} input = {this.state.input} sortTodo = {this.sortTodo}/>\n        {this.state.todos.map((todo) =>\n          <Todo key = {todo.id} id ={todo.id} completed = {todo.completed} text = {todo.text} deleteTask = {this.deleteTask}/>\n        )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}